import java.util.*;import java.io.*;public class Profiler {    private static Map<String, Long> elapsed = new HashMap<String, Long>();    private static Map<String, Long> started = new HashMap<String, Long>();    public static Long occupiedMemory() {        System.gc();        return Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();    }        public static void startTimeProfile(String name) {        System.out.println("PROFILER starts "+name);        if (started.get(name) == null) {            long start = System.currentTimeMillis();            started.put( name, start );        }    }        public static void endTimeProfile(String name) {        long newElapsed = System.currentTimeMillis() - started.get(name);        started.remove(name);        Long old = getProfile(name);        old = old == null ? 0 : old;        elapsed.put(name, old + newElapsed);        System.out.println("PROFILER ends "+name);    }        public static Long getProfile(String name) {        return elapsed.get(name);    }    /* This code tries to profile memory usage. Makes useless measurements.        private static Map<String, Long> memStarted = new HashMap<String, Long>();    private static Map<String, Long> memUsed = new HashMap<String, Long>();    public static void startMemProfile(String name) {        memStarted.put( name, occupiedMemory() ); // Time consuming.    }        public static void endMemProfile(String name) {        memUsed.put( name, occupiedMemory() - memStarted.get( name ) ); // Time consuming.    }    */        public static void writeProfiles(String fname) throws Exception {        PrintWriter pwriter = new PrintWriter(fname);        pwriter.println("{");        System.out.println("Time spent:");        for(Map.Entry<String, Long> entry : elapsed.entrySet()) {            String key = entry.getKey();            Long value = entry.getValue();            //Long mem = memUsed.get(key);            System.out.println(String.format( "\"%s\": %dms", key, value ));            pwriter.println( String.format( "\"%s\": %d,", key, value ) );        }        pwriter.println("\"\":\"\"");        pwriter.println("}");        pwriter.flush();        pwriter.close();    }    }